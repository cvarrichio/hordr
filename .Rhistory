ls()
sessionInfo()
object.sizes()
library(hordr)
roxygen2::upgradeRoxygen('.')
library(hordr)
library(hordr)
len(data=(c(1,2,3)))
rollApply(1:100,sum,minimum=2,window=2,align='right')
rollApply(1:100,sum,minimum=2,window=2)
rollApply(1:100,sum,minimum=2,window=30,align='right')
rollApply(1:100,mean,minimum=2,window=30,align='right')
rollApply(1:100,mean,minimum=30,window=30,align='right')
results<-pb(lapply)(sqrt,rep.int(x=5,times=1000000))
results<-pb(Reduce)('+',sqrt(c(1:100000)))
results<-time (vectorize(sum))(rep.int(x=5,times=1000000))
cbind(list(1,2,3),'a')
cbind(cbind(list(1,2,3),'a'),'a')
library(hordr)
Reduce(cbind(list(list(1,2,3),c(1,2,3))))
Reduce(cbind,list(list(1,2,3),c(1,2,3)))
Reduce(cbind,list(list(1,2,3),c(1,2)))
Reduce(cbind,list(list(1,2,3),c(1,2),'a'))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-Reduce(cbind,list(...))
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(mean,type=4)
vectorize(mean,type=4)(c(1,2,3))
vectorize(mean,type=3)(c(1,2,3))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-Reduce(cbind,list(...))
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2,3)))
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-lapply(list(...),cbind)
cols<-Reduce(cbind,cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
Reduce(cbind,list(list(1,2,3),c(1,2)))
Reduce(cbind,list(list(1,2,3),c(1,2),cbind(c(1,2,3))))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-list(...)
cols<-Reduce(cbind,cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
Reduce(cbind,list(list(1,2,3),c(1,2),cbind(c(1,2,3))))
Reduce(cbind,list(list(1,2,3),c(1,2),cbind(c(1,2,3),c(1,2))))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-list(...)
#     cols<-Reduce(cbind,cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
list(list(1,2,3),c(1,2),cbind(c(1,2,3),c(1,2)))
list(list(1,2,3),c(1,2),cbind(c(1,2,3),c(1,2)))
Reduce(cbind,list(list(1,2,3),c(1,2),cbind(c(1,2,3),c(1,2)),'a'))
list(list(1,2,3),c(1,2),'a')
vectorize(`+`)(list(1,2,3),c(1,2),'a')
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-list(...)
cols<-Reduce(cbind,cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(list(1,2,3),c(1,2),'a')
vectorize(`+`)(list(1,2,3),c(1,2),'a',cbind(1,2,3),data.frame(c(1,2,3)))
Reduce(cbind,(list(1,2,3),c(1,2),'a',cbind(1,2,3),data.frame(c(1,2,3))))
Reduce(cbind,list(list(1,2,3),c(1,2),'a',cbind(1,2,3),data.frame(c(1,2,3))))
cbind(data.frame(c(1,2,3),list(1,2,3))
)
cbind(data.frame(c(1,2,3),list(1,2,3),'a')
)
cbind(list(1,2,3),list(1,2,3))
cbind(list(1,2,3),list(1,2,3),'a')
cbind(list(1,2,3),list(1,2,3),'a',data.frame(c(1,2)))
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2,3)))
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
cbind(list(1,2,3),list('a'))
as.list(data.frame(c(1,2,3)))
(data.frame(c(1,2,3)))
(data.frame(c(1,2,3),c(1,2,3)))
as.list(data.frame(c(1,2,3),c(1,2,3)))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-lapply(list(...),as.list)
cols<-Reduce(cbind,cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2),'a'))
cbind(c(1,2),'a')
as.list(cbind(c(1,2),'a'))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-lapply(list(...),as.list)
cols<-cbind(cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2),'a'))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-cbind(list(...))
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2),'a'))
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
lapply(identity,'a')
lapply('a',identity
)
lapply(cbind(c(1,2),'a'),identity)
sapply(cbind(c(1,2),'a'),identity)
class(cbind(c(1,2),'a'))
cbind(c(1,2),'a')
class(cbind(list(1,2,3),list('a')))
cbind(list(1,2,3),list('a'))
cbind(cbind(list(1,2,3),list('a')),'a')
cbind(cbind(cbind(list(1,2,3),list('a')),'a'),data.frame(c(1,2)))
buffer<-function(...,size=0,fill=NA,align='left')
{
input<-c(...)
if(align=='left')
result<-c(input,rep(fill,(max(0,size-len(input)))))
else
result<-c(rep(fill,(max(0,size-len(input)))),input)
return(result)
}
cbind(data.frame(c(1,2,3),data.frame(c(1,2))))
cbind(as.list(data.frame(c(1,2,3)),data.frame(c(1,2))))
cbind(as.list(data.frame(c(1,2,3)),as.list(data.frame(c(1,2)))))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-list(...)
cols<-lapply(cols,function (x) lapply(as.data.frame(x),identity))
cols<-cbind(cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2)))
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2),'a'))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-list(...)
cols<-lapply(cols,function (x) lapply(as.data.frame(x),identity))
print(cols)
cols<-cbind(cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2),'a'))
vectorize<-function(fun,type=1)
{
function(...)
{
cols<-list(...)
cols<-unlist(lapply(cols,function (x) lapply(as.data.frame(x),identity)),recursive=FALSE)
print(cols)
cols<-cbind(cols)
print(cols)
if(type==3)
type=c(1,2)
if(type!=4)
apply(cols,type,function (x) Reduce(fun,unlist(x)))
else
Reduce(fun,unlist(cols))
}
}
vectorize(`+`)(c(1,2,3),list(1,2,3),cbind(c(1,2),'a'))
df<-data.frame(a=c(1,2,3),b=c(1,2,3))
df
lapply(df,identity)
lapply(list(c(1,2,3)),identity)
unlist(df)
unlist(lapply(df,identity))
cbind(lapply(list(c(1,2,3)),identity),lapply(df,identity))
lapply(c(1,2,3),identity)
cbind(list(1,2),lapply(df,identity))
lapply(df,identity)[1]
lapply(df,identity)[[1]]
lapply(cbind(c(1,2),c(1,2)),identity)
data.frame(list(1,2,3))
data.frame(unlist(1,2,3))
unlist(df)
unlist(df,recursive=FALSE)
cbind(c(1,2,3),list(1,2,3),cbind(c(1,2)))
cbind(c(1,2,3),list(1,2,3),unlsit(cbind(c(1,2))))
cbind(c(1,2,3),list(1,2,3),unlist(cbind(c(1,2))))
as.list(df)
as.list(c(1,2,3))
cbind(as.list(c(1,2,3))as.list(list(1,2,3))
cbind(as.list(c(1,2,3))as.list(list(1,2,3)))
cbind(as.list(c(1,2,3)),as.list(list(1,2,3)))
cbind(as.list(c(1,2,3)),as.list(list(1,2,3)),as.list(c(1,2)))
cbind(as.list(c(1,2,3)),as.list(list(1,2,3)),as.list(c(1,2)),as.list(df))
as.list(df)
unlist(as.list(df),recursive=FALSE)
as.list(df)
cbind(list(c(1,2,3),c(1,2,3),c(1,2,3)))
